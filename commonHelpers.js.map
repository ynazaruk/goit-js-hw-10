{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst myInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst clockFace = document.querySelector('.value');\n// console.log(startBTn);\nlet userSelectedDate = null;\nlet intervalID = null;\n\nconst fp = flatpickr(myInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    intervalID = userSelectedDate - new Date();\n    if (intervalID < 1) {\n      alert('Please choose a date in the future');\n    } else {\n      startBtn.disabled = false;\n      myInput.disabled = true;\n      startBtn.classList.add(`btn-active`);\n    }\n  },\n});\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst calendar = flatpickr(`#datetime-picker`, fp);\n\nconsole.log(clockFace);\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener(`click`, event => {\n  intervalId = setInterval(() => {\n    const deltaTime = userSelectedDate - new Date();\n    startBtn.classList.remove(`btn-active`);\n\n    if (deltaTime < 1) {\n      startBtn.disabled = true;\n      clearInterval(intervalId);\n      return;\n    }\n    const timer = convertMs(deltaTime);\n    clockFace[0].innerText = timer.days.toString().padStart(2, '0');\n    clockFace[1].innerText = timer.hours.toString().padStart(2, '0');\n    clockFace[2].innerText = timer.minutes.toString().padStart(2, '0');\n    clockFace[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n"],"names":["myInput","startBtn","clockFace","userSelectedDate","intervalID","fp","flatpickr","selectedDates","convertMs","ms","days","hours","minutes","seconds","event","deltaTime","timer"],"mappings":"qxBAGA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,cAAc,QAAQ,EAEjD,IAAIC,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAKC,EAAUN,EAAS,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAClCH,EAAaD,EAAmB,IAAI,KAChCC,EAAa,EACf,MAAM,oCAAoC,GAE1CH,EAAS,SAAW,GACpBD,EAAQ,SAAW,GACnBC,EAAS,UAAU,IAAI,YAAY,EAEtC,CACH,CAAC,EACD,SAASO,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACiBP,EAAU,mBAAoBD,CAAE,EAEjD,QAAQ,IAAIH,CAAS,EAErBD,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASa,GAAS,CAC1C,WAAa,YAAY,IAAM,CAC7B,MAAMC,EAAYZ,EAAmB,IAAI,KAGzC,GAFAF,EAAS,UAAU,OAAO,YAAY,EAElCc,EAAY,EAAG,CACjBd,EAAS,SAAW,GACpB,cAAc,UAAU,EACxB,MACD,CACD,MAAMe,EAAQR,EAAUO,CAAS,EACjCb,EAAU,CAAC,EAAE,UAAYc,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9Dd,EAAU,CAAC,EAAE,UAAYc,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/Dd,EAAU,CAAC,EAAE,UAAYc,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EACjEd,EAAU,CAAC,EAAE,UAAYc,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAClE,EAAE,GAAI,CACT,CAAC"}